{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;\csgray\c100000;}
\margl1440\margr1440\vieww17200\viewh12640\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Frank Garcia \
12/8/16\
Assignment 24 Written\
\
\
run:\
Philosopher 0 started.\
Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: 5\
Philosopher 0 entered dining room.\
Philosopher 1 started.\
Philosopher 0 picked up fork 0.\
Philosopher 0 is going to sleep.\
Philosopher 1 entered dining room.\
Philosopher 1 picked up fork 1.\
Philosopher 1 is going to sleep.\
Philosopher 2 started.\
Philosopher 2 entered dining room.\
Philosopher 2 picked up fork 2.\
Philosopher 2 is going to sleep.\
Philosopher 4 started.\
Philosopher 4 entered dining room.\
Philosopher 4 picked up fork 4.\
Philosopher 4 is going to sleep.\
Philosopher 3 started.\
	at dining.Dining.main(Dining.java:23)\
Philosopher 2 picked up fork 3.\
Philosopher 2 is going to eat.\
Philosopher 2 put down fork 2.\
Philosopher 2 put down fork 3.\
Philosopher 2 left dining room.\
Philosopher 2 is going to think.\
Philosopher 1 picked up fork 2.\
Philosopher 1 is going to eat.\
Philosopher 3 entered dining room.\
Philosopher 3 picked up fork 3.\
Philosopher 3 is going to sleep.\
Philosopher 1 put down fork 1.\
Philosopher 1 put down fork 2.\
Philosopher 1 left dining room.\
Philosopher 1 is going to think.\
Philosopher 0 picked up fork 1.\
Philosopher 0 is going to eat.\
Philosopher 2 entered dining room.\
Philosopher 2 picked up fork 2.\
Philosopher 2 is going to sleep.\
Philosopher 0 put down fork 0.\
Philosopher 0 put down fork 1.\
Philosopher 0 left dining room.\
Philosopher 0 is going to think.\
Philosopher 4 picked up fork 0.\
Philosopher 4 is going to eat.\
Philosopher 1 entered dining room.\
Philosopher 1 picked up fork 1.\
Philosopher 1 is going to sleep.\
Philosopher 4 put down fork 4.\
Philosopher 4 put down fork 0.\
Philosopher 4 left dining room.\
Philosopher 4 is going to think.\
Philosopher 0 entered dining room.\
Philosopher 0 picked up fork 0.\
Philosopher 0 is going to sleep.\
Philosopher 3 picked up fork 4.\
Philosopher 3 is going to eat.\
Philosopher 3 put down fork 3.\
Philosopher 3 put down fork 4.\
Philosopher 3 left dining room.\
Philosopher 3 is going to think.\
Philosopher 2 picked up fork 3.\
Philosopher 2 is going to eat.\
Philosopher 4 entered dining room.\
Philosopher 4 picked up fork 4.\
Philosopher 4 is going to sleep.\
Philosopher 2 put down fork 2.\
Philosopher 2 put down fork 3.\
Philosopher 2 left dining room.\
Philosopher 2 is going to think.\
Philosopher 3 entered dining room.\
Philosopher 3 picked up fork 3.\
Philosopher 3 is going to sleep.\
Philosopher 1 picked up fork 2.\
Philosopher 1 is going to eat.\
Philosopher 1 put down fork 1.\
Philosopher 1 put down fork 2.\
Philosopher 1 left dining room.\
Philosopher 1 is going to think.\
Philosopher 2 entered dining room.\
Philosopher 2 picked up fork 2.\
Philosopher 2 is going to sleep.\
Philosopher 0 picked up fork 1.\
Philosopher 0 is going to eat.\
Philosopher 0 put down fork 0.\
Philosopher 0 put down fork 1.\
Philosopher 0 left dining room.\
Philosopher 0 is going to think.\
Philosopher 4 picked up fork 0.\
Philosopher 4 is going to eat.\
Philosopher 1 entered dining room.\
Philosopher 1 picked up fork 1.\
Philosopher 1 is going to sleep.\
Philosopher 4 put down fork 4.\
Philosopher 4 put down fork 0.\
Philosopher 4 left dining room.\
Philosopher 4 is going to think.\
Philosopher 0 entered dining room.\
Philosopher 0 picked up fork 0.\
Philosopher 0 is going to sleep.\
Philosopher 3 picked up fork 4.\
Philosopher 3 is going to eat.\
Philosopher 3 put down fork 3.\
Philosopher 3 put down fork 4.\
Philosopher 3 left dining room.\
Philosopher 3 is going to think.\
Philosopher 4 entered dining room.\
Philosopher 4 picked up fork 4.\
Philosopher 4 is going to sleep.\
Philosopher 2 picked up fork 3.\
Philosopher 2 is going to eat.\
Philosopher 2 put down fork 2.\
Philosopher 2 put down fork 3.\
Philosopher 2 left dining room.\
Philosopher 2 is going to think.\
Philosopher 1 picked up fork 2.\
Philosopher 1 is going to eat.\
Philosopher 3 entered dining room.\
Philosopher 3 picked up fork 3.\
Philosopher 3 is going to sleep.\
Philosopher 2 finished.\
Philosopher 1 put down fork 1.\
Philosopher 1 put down fork 2.\
Philosopher 1 left dining room.\
Philosopher 1 is going to think.\
Philosopher 0 picked up fork 1.\
Philosopher 0 is going to eat.\
Philosopher 0 put down fork 0.\
Philosopher 0 put down fork 1.\
Philosopher 0 left dining room.\
Philosopher 0 is going to think.\
Philosopher 4 picked up fork 0.\
Philosopher 4 is going to eat.\
Philosopher 0 finished.\
Philosopher 4 put down fork 4.\
Philosopher 4 put down fork 0.\
Philosopher 1 finished.\
Philosopher 3 picked up fork 4.\
Philosopher 3 is going to eat.\
Philosopher 4 left dining room.\
Philosopher 4 is going to think.\
Philosopher 4 finished.\
Philosopher 3 put down fork 3.\
Philosopher 3 put down fork 4.\
Philosopher 3 left dining room.\
Philosopher 3 is going to think.\
Philosopher 3 finished.\
/Users/frankgarcia/Library/Caches/NetBeans/8.2/executor-snippets/run.xml:53: Java returned: 1\
BUILD FAILED (total time: 1 second)\
\
\
This build deadlocks because it can have a process running (one of the philosophers) that will keep waiting for his turn to pick up one of the forks but the program will never get to him. He is a running process that will not ever be able to execute. }